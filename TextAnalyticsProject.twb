<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0611.0333                               -->
<workbook original-version='18.1' source-build='2022.1.3 (20221.22.0611.0333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='yearly_sent_metrics' inline='true' name='federated.1yyrskj19u99zu0zoj43o18vwo2v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yearly_sent_metrics' name='textscan.0ogf8f20hx6ijg17848e51n0hgox'>
            <connection class='textscan' directory='G:/My Drive/MSA/GitHub/bluefall2hwteam17' filename='yearly_sent_metrics.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ogf8f20hx6ijg17848e51n0hgox' name='yearly_sent_metrics.csv' table='[yearly_sent_metrics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Avg Word Count' ordinal='2' />
            <column datatype='real' name='Avg Foreign Words' ordinal='3' />
            <column datatype='real' name='Avg Comp Sent' ordinal='4' />
            <column datatype='real' name='Avg Pos Sent' ordinal='5' />
            <column datatype='real' name='Avg Neg Sent' ordinal='6' />
            <column datatype='real' name='Avg Emo Flags' ordinal='7' />
            <column datatype='real' name='Avg Anger' ordinal='8' />
            <column datatype='real' name='Avg Antic' ordinal='9' />
            <column datatype='real' name='Avg Disgust' ordinal='10' />
            <column datatype='real' name='Avg Fear' ordinal='11' />
            <column datatype='real' name='Avg Joy' ordinal='12' />
            <column datatype='real' name='Avg Neg' ordinal='13' />
            <column datatype='real' name='Avg Pos' ordinal='14' />
            <column datatype='real' name='Avg Sadness' ordinal='15' />
            <column datatype='real' name='Avg Surprise' ordinal='16' />
            <column datatype='real' name='Avg Trust' ordinal='17' />
            <column datatype='real' name='Avg Exp Valence' ordinal='18' />
            <column datatype='real' name='Avg GS Index' ordinal='19' />
            <column datatype='real' name='Avg GS Indicator' ordinal='20' />
            <column datatype='real' name='Avg Twitter Sent' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ogf8f20hx6ijg17848e51n0hgox' name='yearly_sent_metrics.csv' table='[yearly_sent_metrics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Avg Word Count' ordinal='2' />
            <column datatype='real' name='Avg Foreign Words' ordinal='3' />
            <column datatype='real' name='Avg Comp Sent' ordinal='4' />
            <column datatype='real' name='Avg Pos Sent' ordinal='5' />
            <column datatype='real' name='Avg Neg Sent' ordinal='6' />
            <column datatype='real' name='Avg Emo Flags' ordinal='7' />
            <column datatype='real' name='Avg Anger' ordinal='8' />
            <column datatype='real' name='Avg Antic' ordinal='9' />
            <column datatype='real' name='Avg Disgust' ordinal='10' />
            <column datatype='real' name='Avg Fear' ordinal='11' />
            <column datatype='real' name='Avg Joy' ordinal='12' />
            <column datatype='real' name='Avg Neg' ordinal='13' />
            <column datatype='real' name='Avg Pos' ordinal='14' />
            <column datatype='real' name='Avg Sadness' ordinal='15' />
            <column datatype='real' name='Avg Surprise' ordinal='16' />
            <column datatype='real' name='Avg Trust' ordinal='17' />
            <column datatype='real' name='Avg Exp Valence' ordinal='18' />
            <column datatype='real' name='Avg GS Index' ordinal='19' />
            <column datatype='real' name='Avg GS Indicator' ordinal='20' />
            <column datatype='real' name='Avg Twitter Sent' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Word Count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Word Count]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Word Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Foreign Words</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Foreign Words]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Foreign Words</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Comp Sent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Comp Sent]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Comp Sent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Pos Sent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Pos Sent]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Pos Sent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Neg Sent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Neg Sent]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Neg Sent</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Emo Flags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Emo Flags]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Emo Flags</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Anger</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Anger]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Anger</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Antic</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Antic]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Antic</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Disgust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Disgust]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Disgust</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Fear</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Fear]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Fear</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Joy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Joy]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Joy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Neg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Neg]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Neg</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Pos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Pos]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Pos</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Sadness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Sadness]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Sadness</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Surprise</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Surprise]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Surprise</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Trust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Trust]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Trust</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Exp Valence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Exp Valence]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Exp Valence</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg GS Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg GS Index]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg GS Index</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg GS Indicator</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg GS Indicator]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg GS Indicator</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Twitter Sent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg Twitter Sent]</local-name>
            <parent-name>[yearly_sent_metrics.csv]</parent-name>
            <remote-alias>Avg Twitter Sent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Avg Anger]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Antic]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Comp Sent]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Disgust]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Exp Valence]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Fear]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Foreign Words]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg GS Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg GS Indicator]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Joy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Neg Sent]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Neg]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Pos Sent]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Pos]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Sadness]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Surprise]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Trust]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Twitter Sent]' role='measure' type='quantitative' />
      <column datatype='real' name='[Avg Word Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='yearly_sent_metrics.csv' datatype='table' name='[__tableau_internal_object_id__].[yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C]' role='measure' type='quantitative' />
      <column-instance column='[Avg Foreign Words]' derivation='Median' name='[med:Avg Foreign Words:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg GS Indicator]' derivation='Median' name='[med:Avg GS Indicator:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Anger]' derivation='Sum' name='[sum:Avg Anger:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Antic]' derivation='Sum' name='[sum:Avg Antic:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Comp Sent]' derivation='Sum' name='[sum:Avg Comp Sent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Disgust]' derivation='Sum' name='[sum:Avg Disgust:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Exp Valence]' derivation='Sum' name='[sum:Avg Exp Valence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Fear]' derivation='Sum' name='[sum:Avg Fear:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Foreign Words]' derivation='Sum' name='[sum:Avg Foreign Words:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg GS Index]' derivation='Sum' name='[sum:Avg GS Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg GS Indicator]' derivation='Sum' name='[sum:Avg GS Indicator:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Joy]' derivation='Sum' name='[sum:Avg Joy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Neg Sent]' derivation='Sum' name='[sum:Avg Neg Sent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Neg]' derivation='Sum' name='[sum:Avg Neg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Pos Sent]' derivation='Sum' name='[sum:Avg Pos Sent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Pos]' derivation='Sum' name='[sum:Avg Pos:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Sadness]' derivation='Sum' name='[sum:Avg Sadness:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Surprise]' derivation='Sum' name='[sum:Avg Surprise:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Trust]' derivation='Sum' name='[sum:Avg Trust:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Twitter Sent]' derivation='Sum' name='[sum:Avg Twitter Sent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Avg Word Count]' derivation='Sum' name='[sum:Avg Word Count:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[med:Avg Foreign Words:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Exp Valence:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Foreign Words:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Sadness:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Twitter Sent:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Disgust:qk]&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Neg:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Surprise:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Trust:qk]&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Pos:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[med:Avg GS Indicator:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg GS Index:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg GS Indicator:qk]&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Fear:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Anger:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Neg Sent:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Pos Sent:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Comp Sent:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Word Count:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Antic:qk]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Joy:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='yearly_sent_metrics.csv' id='yearly_sent_metrics.csv_88DB1F4A92FE45C8938636B5319E8A1C'>
            <properties context=''>
              <relation connection='textscan.0ogf8f20hx6ijg17848e51n0hgox' name='yearly_sent_metrics.csv' table='[yearly_sent_metrics#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Avg Word Count' ordinal='2' />
                  <column datatype='real' name='Avg Foreign Words' ordinal='3' />
                  <column datatype='real' name='Avg Comp Sent' ordinal='4' />
                  <column datatype='real' name='Avg Pos Sent' ordinal='5' />
                  <column datatype='real' name='Avg Neg Sent' ordinal='6' />
                  <column datatype='real' name='Avg Emo Flags' ordinal='7' />
                  <column datatype='real' name='Avg Anger' ordinal='8' />
                  <column datatype='real' name='Avg Antic' ordinal='9' />
                  <column datatype='real' name='Avg Disgust' ordinal='10' />
                  <column datatype='real' name='Avg Fear' ordinal='11' />
                  <column datatype='real' name='Avg Joy' ordinal='12' />
                  <column datatype='real' name='Avg Neg' ordinal='13' />
                  <column datatype='real' name='Avg Pos' ordinal='14' />
                  <column datatype='real' name='Avg Sadness' ordinal='15' />
                  <column datatype='real' name='Avg Surprise' ordinal='16' />
                  <column datatype='real' name='Avg Trust' ordinal='17' />
                  <column datatype='real' name='Avg Exp Valence' ordinal='18' />
                  <column datatype='real' name='Avg GS Index' ordinal='19' />
                  <column datatype='real' name='Avg GS Indicator' ordinal='20' />
                  <column datatype='real' name='Avg Twitter Sent' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_1758007263164BAF913A6FFAC8960182]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sentiments by Year' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Sentiments by Year' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sentiments by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sentiments by Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yearly_sent_metrics' name='federated.1yyrskj19u99zu0zoj43o18vwo2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1yyrskj19u99zu0zoj43o18vwo2v'>
            <column datatype='real' name='[Avg Anger]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Antic]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Disgust]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Fear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Joy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Neg]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Pos]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Sadness]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Surprise]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Trust]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Anger]' derivation='Sum' name='[sum:Avg Anger:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Antic]' derivation='Sum' name='[sum:Avg Antic:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Disgust]' derivation='Sum' name='[sum:Avg Disgust:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Fear]' derivation='Sum' name='[sum:Avg Fear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Joy]' derivation='Sum' name='[sum:Avg Joy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Neg]' derivation='Sum' name='[sum:Avg Neg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Pos]' derivation='Sum' name='[sum:Avg Pos:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Sadness]' derivation='Sum' name='[sum:Avg Sadness:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Surprise]' derivation='Sum' name='[sum:Avg Surprise:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Trust]' derivation='Sum' name='[sum:Avg Trust:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Anger:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Fear:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Antic:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Sadness:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Disgust:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Joy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Neg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Pos:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Surprise:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Trust:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Anger:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Fear:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Antic:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Sadness:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Disgust:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Joy:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Neg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Pos:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Surprise:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Trust:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[Multiple Values]' scope='rows' value='Sentiment' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[Multiple Values]</rows>
        <cols>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{633FCBF7-947C-4978-BBA9-A79F217FD1A9}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Positive and Negative Sentiment with GS Indicator</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yearly_sent_metrics' name='federated.1yyrskj19u99zu0zoj43o18vwo2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1yyrskj19u99zu0zoj43o18vwo2v'>
            <column datatype='real' name='[Avg GS Indicator]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Neg Sent]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Pos Sent]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg GS Indicator]' derivation='Sum' name='[sum:Avg GS Indicator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Neg Sent]' derivation='Sum' name='[sum:Avg Neg Sent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Pos Sent]' derivation='Sum' name='[sum:Avg Pos Sent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Neg Sent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Pos Sent:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg GS Indicator:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg GS Indicator:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1yyrskj19u99zu0zoj43o18vwo2v].[Multiple Values] + [federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg GS Indicator:qk])</rows>
        <cols>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{F81B9F14-FC8C-4BF4-AA31-C2925874D4D3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='yearly_sent_metrics' name='federated.1yyrskj19u99zu0zoj43o18vwo2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1yyrskj19u99zu0zoj43o18vwo2v'>
            <column datatype='real' name='[Avg Comp Sent]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg GS Indicator]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg Twitter Sent]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Comp Sent]' derivation='Sum' name='[sum:Avg Comp Sent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg GS Indicator]' derivation='Sum' name='[sum:Avg GS Indicator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Twitter Sent]' derivation='Sum' name='[sum:Avg Twitter Sent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Comp Sent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg GS Indicator:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Twitter Sent:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Twitter Sent:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1yyrskj19u99zu0zoj43o18vwo2v].[Multiple Values] + [federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Twitter Sent:qk])</rows>
        <cols>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{55AA3D9D-88CE-452A-9AC5-689FE4AEF45D}' />
    </worksheet>
    <worksheet name='Valance over time'>
      <table>
        <view>
          <datasources>
            <datasource caption='yearly_sent_metrics' name='federated.1yyrskj19u99zu0zoj43o18vwo2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1yyrskj19u99zu0zoj43o18vwo2v'>
            <column datatype='real' name='[Avg Exp Valence]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg Exp Valence]' derivation='Sum' name='[sum:Avg Exp Valence:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[sum:Avg Exp Valence:qk]</rows>
        <cols>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{884DA500-5C7D-4ED8-AC77-FCAD7A72CD8C}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sentiments by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63E03075-2508-4E2C-B10E-762DB0195F67}' />
    </window>
    <window class='worksheet' name='Valance over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A9A82B4-84D1-4E5B-93C0-79C7AB24E76B}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]</field>
            <field>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14A7539B-E98A-479C-9742-4AB85F2CACF6}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[:Measure Names]</field>
            <field>[federated.1yyrskj19u99zu0zoj43o18vwo2v].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CABA067B-4E83-4D18-9E7E-C8CB495A5038}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sentiments by Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXBc15Xn+Xvv5b7v2ImNBLiAO0WKpCRLsiyVy7a6bE1Vd1W5yiXHxETH
      zIeZ6J4PM/O1o2MmYiJ6PkzHTE9Mue2YqrKr2+1F3lQuWSVLoiSKFFcQJEAABLERSCD3Pd92
      58MjKe5YKYJk/iMyEgSRJ8977/zPPefce8+VhBCCBhp4SiE/agUaaOBRokGABp5qPBICmKaJ
      aZprlqPr+pplCCEwDGND6LLR5BiG8cQ/p0dCgPVKO9bj4ayXnI2ky3rJ2UjPSQjxUJ5TIwRq
      4KlGgwANPNVoEKCBpxoNAjTwVKNBgAaeajQI0MBTjQYBnjCoqsrIyAjj4+OPWpXHAra1ChCm
      yqVz5/C0bKGrOQQI8oszDI1eY/ve/dgqSYbGF9lzYA/OBt0eGsrlMidOnODs2bOkUikAXn/9
      dQ4dOvSINdvYWDMBkpNjOBI9ZCcuEk8cwYtJqS6xd/dmhi5eQpga/b1xBi9OcGCgez10buA6
      6vU6c3NzHDt2jPHxcZxOJwcPHmTPnj0MDw/zq1/9CsMwOHz4MJIkPWp1NyTWTADDNAmHI/gq
      Hoo18HoUErEQ41eu0t3ZwrVMkWCoBcfcJUzTxDAMhBAIIdb8UAzDQFXVtV7CTZ02ii5Lycnn
      84yOjnLy5Emy2Szt7e28/vrr9PT04Ha7AdizZw+VSoW3334bgAMHDqxYF9M0kSRpQzynGzaz
      3s9pzQRQZJlMJkVxsUJ/j4lpmIyNjtPS3YfPIZiYmCSXUdDwI8sysixjGAaSJCHLq4+JhBCM
      jY0RDodpampatawbRLTb7avWBazY2+FwrEnG/eTcWAczOzvLqVOnuHDhAna7nd27d3PgwAGi
      0SiKotwl66WXXsI0TX7729/icrnYu3fvioxZ1/Wbz2y1EEJQrVbx+Xz31HG5uOE81/s5rZkA
      TZ2byQ6eJ7Z5AHs1S9b0gFFj6NxpYu2b2drbwsWJNHv27lzrV90G0zQ5f/48g4ODDAwMcOTI
      Edrb29d0kzcahBDk83mGh4f57LPPmJ+fp6enh2984xsMDAwsaQyKovDqq68C8NZbb+Fyudi+
      ffsXoTpghWi/+93vOHHiBLFYjIGBAbq7u2lubsblcn1hejwI0qPYELMeIwBYid/U1BQffvgh
      09PTbN68mYMHD9LX17dsIggh0HV9Q40ANpuNmZkZTp48ycjICEII9u/fz8DAAC0tLcu6tlv1
      MQyDd955h08//ZRvf/vb9Pb2LkuXtYwA+Xyen/zkJySTSV566SUqlQpDQ0PMz88TiUTYvHkz
      27dvp7u7G5ttaT/8sEaAx5oANy5G13XS6TTvv/8+Q0NDhMNhvvSlL7F9+3acTucDZWwUAtwI
      FS5cuMDp06eZm5ujtbWVQ4cO0dfXh9vtXlH4cqc+pmnyzjvvcOLECf78z/+c7u7uJeWthgBC
      CGZmZvi7v/s7QqEQ3/rWtwiFQtjtdgzDIJPJcPHiRQYHB0mn0zgcDvr7+9m1axcdHR04HI57
      ft9qCHAjdNQ0jUKhQDabpV6v09zcTCAQwOVyPRkEuAEhBAsLC3z00UecP3+eUCjEkSNH2Llz
      583k8E48agKYpkk+n+fUqVOcOXOGWq3Grl272LVrF11dXatOQO+lj2EY/OY3v+HcuXP82Z/9
      GT09PQ+UsVICaJrG8ePHeffdd9mxYwdf/epX8fl899TFNE0ymQzj4+NcunSJyclJnE4nHR0d
      bN++na6uLsLh8G1//yACCCFQVZVsNsvi4iLJZJJUKkUmkyGXy1EqlfB6vdjtdvL5PD6fj87O
      zieLADdgmibpdJrPPvuMkydP4nK52LdvH4cOHcLv99/2t4+SAMlkkvfff5/h4WG8Xi/PPvss
      fX19xOPxNenyIH1UVeWtt97i0qVLfOc736Gzs/O+MlZCAMMw+MUvfsGZM2d47bXXOHjw4M17
      utS9EUKQy+W4evUqFy5cYHR0FJvNRltbG7t376a/vx+v13uTAKZpUiwWSSaTLC4usrCwwPz8
      PIVCgXK5DEA0GqW5uZlYLEZTUxNNTU04nU6EENRqNSYnJ7ly5cqTSYAbuGHcJ06c4Pjx4+Tz
      eQ4cOMDhw4dvGtkXTQBVVRkeHub48ePMzMzQ1NTEkSNH2L17N5IkoWnaQ6sm3YBhGPz4xz9m
      dHSUv/iLv7A84T1GmuUQ4Mao++Mf/5hqtcobb7xxV3i1EucghKBer3P58mUuXrzIxMQE5XKZ
      zs5OAoEAmUyGhYUFVFXF7Xbj8XgIhUI0NzfT2tpKPB6ntbX1prw7r+tWXYQQTzYBbkW1WuXs
      2bMcP36cQqHArl27OHz4MIlE4qEkV3eiWCwyMjLCp59+ytzcHAMDAxw6dIiOjo7bksCHWU69
      8////u//npmZGb773e/S3Nx8198shwAjIyP87Gc/IxaL8a1vfYtIJLJiXR6EWq3G7Owsg4OD
      FItFmpqaiEajxONxgsEgXq93WUn0/XR5aghwA/V6nfHxcT7++GNmZ2fp6Ojg0KFDN6sRiqIg
      y/KKY+/71e/z+TzHjx/nzJkzCCEYGBjg6NGjhMPhe17/F0UAsJzCj3/8YxYWFnjzzTeJRqO3
      /f+DCKDrOp988gnvvvsue/fu5bXXXrtvaXM9rqlRBboH1nJjTdNkamqKDz74gOnpaYrFIj6f
      j0gkQjweJx6Pk0gkCIfDeDwePB7PA2/+rbrous7U1BRnzpy5mYwfOnSIvXv33jcZX49rWo0c
      TdP44Q9/SCqV4s0337zNg9+PAKVSiZ/97GdMTEzw2muvLbneqEGAO7ARCHCrLvl8nlKpRD6f
      v1k9SKfTpFIpVFW9SYBIJEIsFqO1tZVAIEA4HCYcDiNJEqqq3pyd/vjjj5mcnKS7u5ujR4/S
      1dW17ImfL5oAYI0EP/rRjygUCrz55psEg0Hg3gS4du0aP//5z6nVarzxxhts2rRpydGyQYA7
      sJEIcK8k+EYHAsMwqFarJJNJFhYWbpIimUyiaRqGYWCz2YjFYoTDYaanp6nX6/T19fHss8+u
      amb6URAAoFKp8MMf/pBSqcRf/uVfEolEbiOAaZqcPXuWt99+m9bWVt544w0CgcBD0eVeaBDg
      HnhYBFgKuq5TKBTI5/PkcjmSySSZTIZ4PM6+ffuIRCLrWr//ouQUi0W+//3vY5omf/VXf4XP
      50OWZXRd5/333+fDDz/khRde4MUXX1xT4rkaNAhwDzwqAjwsXTaCnEwmww9+8AOcTid//ud/
      jhCCn//858zOzvK1r32NPXv2rEuBYKVoEOAeaBDg4cjJ5XJ873vfA6xn5fV6+eY3v3lbff2L
      0uUGHhYBGnu0GrgLoVCI73znO/j9fnp6evjud7+7auPf6GiMAI0R4L6o1WrYbLYVxfsPS5fG
      CNDAFw6bzbZmJ7XR8WRfXQMNLIEGARp4qtEgQANPNda8J/hRwTANTg2dRQhoa2qhKZbA6XA0
      2n80sCI8tgRQZIXutk4mr01zfmQIdfA08UiM1utk8Hm8DTI0sCQeWwIAREJhmhNN1Oo10tkM
      1xbmuTg2zPmRIaKhCK2JZloSzfg83ketagMbFE/UPIAQAk3XSGUzTM/NsJhJoes6QX+Q9uZW
      WuJNuN0elFu+tzEPcH+sR1+g9dJlw/YF2kiQJAmH3UFropnWRDOarpEr5LmWnGdiZtIaGYJh
      WptaaI434fV4kRth0lONJ4oAd8JusxOPxIhHYuiGTr5YZGZ+livTVxkaHcbv9ZGIxWmNNxOL
      RJcW2MAThycqBFoOblxuvlhgZn6W2fk5StUyTruDjpY2WhItBHw+XM6VdS7bSKHLesl5kkIg
      U5gspBaZmZslHo3TkmjGbrM9fQS4ly6pbIZsIUcytUA2n0WWFeKRKM2xJhLRGN5lJNEbyXDX
      S86TQgDTNLk0PsLIlVFCgRCFUhGnw0FLvKlBgFuTYNM0qal1FtKLXEvOk8qkMIXA5/HS1txC
      a6IZn9eHLN29aX4jGe56yXncCSCEoFqvcWrwDJl8jj3bdtIUjSMQXFuYZ2zyCe8LtBw8qApk
      miaLmRTXFuZZSKcoV0p43B5i4SjtLW0EfQFcTufNPcEbxXDXS87jTAAhBPOLSU4PncPldPHM
      rn0EfP67+gI90UnwWiHLMk2xBE2xBLphUCqXWMykmJm/xkeffYLD4SQeiRIPR4mEIutiuA2s
      HbphMHJllNGr43S2dbCttx/XPXrESpLUIMByYVMUQoEgoUCQ3k3daLpmhUoL81wcv4yma3ic
      bnxeL5FgmFAgiN/nx2F3YH8KlhVvFNTqdU4OniaTy7Bn+046WzseuCKgEQKtw0SYqqmkMmmK
      5RK5Yp5ypUKlVqFSreJyOvF7ffi9fvxeH6FAELfLjdvlwm67+zsbIdC9sZwQqFqrcWroLPV6
      nf0DewgFgkvq0hgB1gEOu4NYOEprUwtgPSxV06ipNYqlEsVykVyhwOTsFIOXSyiygt1ux+fx
      EPKHCPj8BPx+woEQ8PmpNQ0sD0II8sUCJ8+fxuN28/wzR3As06E1CPAQIMsyLqcTl9NJyH+7
      FzJNk1whT6FUpFgukc1nmV2YQ9M0dF3H43Zb5ddYnEgojMvpRJa++PBJ13Uq1QqKouB2uTds
      CGeYBjNz1zh14SxNsTjP7Ny3bOOHdTkmVWPi8mVc8U20Rv2AoF4psJBTaW+Nk527ytW5DM2b
      ttAa8y8l7omHLMtEQmEioc973+uGTq1Wo1Krks3nWEgvcvL8NLIsEwtHrNnsaIyQP/jQRgZT
      CErlEtlCjlQmTTqXoVypIMsy4UCQeCRGIhonFAhumGOoNE3j3PAFpuZmGOjbRs+mLmzKykx6
      zTlAcnKYtO6lPD/NwOEjuCWT2ekpFjJFdu/ZwfDpU8R6+gh4vLgclnJPWg6wXrrckGOz2air
      Krlintn5ayRTC6iahtftoSmeoDnWRCQUxqYo9yXEg/S50fmuptbJ5LLMp5JkclmqtSqKohD0
      B2mOJQj5g2iGRjK1SDK1QF2to8gKkVCElkQTiUgMt8u9JCHWOwcQQlAoFfls8DSqprF3x26a
      ovFlOYd17ws0O34BV8sOtNlz0LaHZo/1+5GLF9myvY+zH35A3rSxZcc+WiOedT8mdT280XrI
      eZi63AibUrkMC+kF8sUCsqzQFIsTDUWIBEPXF/bJ95VjmibVeo18IU+mkGMxk6JcKWO32Qn6
      A0RDEcLBMOFgEEVWbn7m1mNSK9UqC5lFsvkc6VyGar2Gz+0lFokSC0Xwe31477EPYz3uza02
      Mz0/y6XxEYL+ILv6d+BxPbjh8IN0WXMIJEsShWKBYrrKXSfuGLBpx14CLpOTQxO0x3au2zGp
      sH4jwEY/JhWg2eWiOdGEafZTrlbIFfJMz81ycWwE0zQIBUIkonES0RjRkNXh2TBN0rkMqWya
      xUyKSrWCbhhEQxHamlpoiTfjcbtxOV3LOiDD4XAQut44V9VUytUKC6lFUtk0Zy4NAoKAL0As
      HKE53kQkGMZms63bCFBX61yeGGNiZpKeji629vbds5L2IKz7CCD0GoNnzuBp66fDb1A0vSxe
      Ocdctkq0rZeEo8LobJ7d+w8QdDdCoPWUc+MQuFyxwLWFOZKLC5QqZew2G06Hg0K5hF2x4fP6
      aIoliIYixCNRJFle1jLw5ZZBhRDohk42n2NuMUk6m6FYLmKaJrFI7OaM+Z1QHhDC3Qpr6QmM
      T01QqlR4Ztc+mmOJVUUQjdaId+BxJsCdME2TQqlIrpCnWCqSiMUJ+gMrXtl6A6udBxBC3JbQ
      Z/NZ7mVlhmnAMqxPYOUsAV+A3dt24PeuvpjSIMAdeJIIsN5y1uuk+Lpax3aPUMUyvWUx4GY+
      stZrakyEPQ3Qyki1LDjaH7UmlqOTZGxrTIJvVIHWGw0CPGmY/whGvo+tPANtX4aePwH//Y9C
      fdrRIMCTACGgOg8j/xFm34WWFzDav45t+i14/6+g7VXY/C/AtwmkL3ASy9ShlkZODYK/FXwd
      oLhB3jhmt3E0aWB1MHXL6C/+X6C44OD/BomDmKoK3V+H5Mdw5T/D+9+F1peh908h0AMPc3mF
      mof0OZj8BaTOINt8oGYs/YKbIbQdwtvB3wPeNlAe3TLyRhL8OCfBpSkY/muY+wA6vwH93wVn
      +G45pgap0zD2Q8ich8Sz0PcmhPoeKH7FSXDxKky+Bdfeh3oGEgeh61uo3h4c1CA/BrlhyJyD
      7EVrNHInILAFItshsgtCW0G+9+akxgkxd+CpJYBWhqlfwfD/a4U1O/+15VGXOp1dmJAZhJHv
      Q/osRHZC/5vW+z2MbkkCCNPy9gufwsRPIX8ZfJ3Q8QfQ8VVwBOHO3XI3Kj+mZhE4cwHSZ6x3
      rQCGCsE+iOyAyG4IbwObD9PmbRDgTjyVBMhetMKd3Aj0/RV0vwG2u+v8D5QjDEifh7EfwcIn
      ENsHm/8UYs+A/HmOcF8CmLplsDO/tUIsU4emZ6HzdcuDK7dPei3r3pg6VOagNA3p09Z1lmeg
      lgZPC8Lfjdn6CkrbS2sKmRoEuAOPBQGEAL0E4z+G8R9BYDPs+tcQ6L3N669YH1OziDT811aI
      FNoKW/9rixCy7XYCCBO0Ikz+Emb+0TJUfxds+kNo+wo4AvfNK1Z1b0zDuubqAmQGEelzMH8M
      KdBjXXuwb1V5TIMAd2DDE0CYsHAcLvyfoFetkGXT15aspKxIH2FaHn30/4OFE1bYseU76OE9
      yJJALlyGqz+zvL0jCM3PWToEH5xDrEqX+8A0TYzcKPaxH1h6dL4OW74N7qYVyWkQ4A5saAJo
      Rbj4H2DqN9DyJdj+L8HT/PD0MXUr9Bj/Ecx9gBnegaSXkSpzEBmArm9ao4Pj7q2G667Lnard
      SIJtMsy+B5f+gzWCbf+X1gi0zNJqgwB3YEMSwCbD/DEr1hcmbP9vLQLIy6/hr0kfYUB+DPPq
      z5HsPqTuN8AVW3X9ft33BAsBesUi6tgPPw8Jg1uWDIsaBLgDG44A2Ss4Rv8aFj+D9ldg638D
      ztAj0WfDb4oXAooT1miw8Kk1Qm35tkXWZerSmAjbCKhn4do/Qeo09tQZ6wEe+l8huu++SW4D
      WPcm0AMH/g3MfwgX/28rqd/7v1izzssR0RgBvuARQJiWwRevWg8t+QlUroEzAqFt6M0vYet4
      +Z51+YeizwOw4UeAWyEEaCUY/D8sZ7Ll29Dzx3flK40R4FHANKB0FRZOfj7po5etsmPby9bM
      bKAX7D5rCcMajf+phCSBww97/2erijX6NzDzDuz476D56H3XQDVGgIcxApi6laRlL8LsO9Z7
      bdFaC5N4FhKHrGl/V+QuY3/S9gOsly4rWgohBKg5uPT/wPTbENsPu/4VeNpQNc3S5fos9jII
      UGf00jV6t3YwMTJJ59beNQ8bTyQBqgUc1UnLu89/aL3bvdaCr6bDltH7OpecxWwQ4N5Y1Vog
      Iay1R0P/HnKXYPOfojW9jL08Dtfeg4VPlyKAybkPf8Hf/vQE/QPdOEO9/OkbLzcIcCv0Ckz9
      GjHxU6TyNLhbLIOPH4BQ/5onalaLBgFugV6xZq+Hv4fQK0hCh/gz0PryUgQQGHqVcycH8UbD
      eHxh2lrjaz5d+7EngDCgNANzv4cr/wWEgd76Krbu18HbboU1q6zeNAhwb6x5NagQUEuhpy9i
      S+wGu7V0YwlnLqHYZMYvDhHb3EsgLNPaGl+dAk8ChAn5UbjyY8v43c3WgrS2lzElLzTao29c
      SBK445iJw7c9p2VEMxL1aoaJCYW46mIXm9kYjfG+IAgB4voSgZHvWxs9vC2w63+E5uetOB9A
      VR+tng2sCssggIODR/czXYkSDdifLuPXKtbCq9G/gdKkZfCH/x1Edz/cHVUNfGFYBgGqXBq9
      Ql03KCk1tu7cxuq6zDxGqC7C9K+trYaVJLS+CHv+J6u+3MAThWUQwM32/s389p/Os/PFP+Tu
      /l5PCISAatLa2TT5llWz3/R16Py6VclpePwnEssggEm1rNPW1Y5RKWEs70OPB4RprbFPX4Tk
      ezD9D1Zi2/8mdPyhtcmjgScay7BljcmZPM88f9Q6KOHh67S+0CtQmYdaytpdVM9Ys7LlWcvj
      6zVstZS13v3Av4Hons8T2waeeCyrClTLJ/no2IdEm3t58fm9G4MENxY/1YtWT5xayordK9cs
      A79h9EYVJLu1T1VxWIujXHHwtEBsLzgiGIE+bKGeL7ZnTgMbAsuKZoQkEwwG8XmX34f9oUPo
      2M//W6tKY/daqykdAXBGwZWwPLmn1WoTYg9Y7w6/FdvfJkcgdL1h/E8pliCAIDWXYseB/WSK
      VRwOOxtmdbpkQ9/+32Pf9a8so1acIDseaZOlBh4/LDkCGLpKPpunqhnoUgETNsZcgCQh3M2P
      fva1XIGJKZR09vMti0E/NMfB67FeDWxYLEkAWa4yfHmeA0e2cenCNUz2fhF6bWwIAfkiXB6H
      iWlQFETvJvB6YTENV6fhzCA4nRAOQiQEzQmIhsGzgcLIBpYmQK1coa5WyWTL7HvuIE91gGGa
      kCvA4CWYmbO8+/6dsKkdE2GNRlu6rb+rqxYZkoswMw+Xr1jE8XqgrRkSMevlsIOiNLY+PiIs
      uRiuo283fUOjTE1epaw66eqIc+t6PK2S49Sps9gjm9i3owdJmCRnJpjNGuzZtYX5sSFGptPs
      OHCYhP8xpY9pQioDQ5dh+prl0Q/vh852y3jh87VAkmT9zuO2/r/zeo/+ShXSWUtOctEaOWp1
      K1yKhqEpDrEIuJw8MV5G06BYRs5kweMBm80ivN0G9uvvj5j4y6gCCQx7iD9640WcNttdH1iY
      m2HTjkNUpobI6z2EFAl/pBl3YRK0KnNlmaOH93BxdILEzv6HchEPDaZpefpLo7CQhqYYfPk5
      6922wulAj9t6dbR+PkKUKzA7b40Up86DpmN3Oy1j8XutkCrgBZ/PGjl8HtigB1YDn4eGiymY
      TVqEr1RQBKDrlu42xXIQimL97HCAx2WFi27XdQfgsO6Vy/H5zw8Jy3qKTj3L3/3tj0i09/HP
      /vC52z4kENYBaG6FugbYJDxeL7IEQhjYXS7sdg+SUG+u6V7PY1LVdViFeUOnm9B0mJpFuTSK
      XKlCZzvGH7yIGbx+NpVp3rX6c8W6KDIEfFZPm22bQQikYhl1egaPCVK5AnPzcKUGmgG6jjBN
      hMeF6XIh/F6Ezws3Xh6XRUq7DWy2dbk3dx6TehdUzRrZFlJIyRRKKo1cUy2yBv2I7VswomE0
      n8c6EE/Tkao1JFVFqqlI9TrSDRm1uhVe1upgGNbLNEG33iWbAu0tqPt2WkRZJe68L8siQFnN
      43b34qqX71oK4fN6GTp3At2QeaY9T77sIjc3zvj4OIovhMjPc+LkNfxN/Tc3V2y0DTE3j0mt
      1WByFkbGIV+Arg7Y0Q+R0JI3ak2H2xkGs6NDTJw7QXJylI6tu9nx/Kv4wzHLAOp1qNaQanWk
      Uhm5VIZC0RqVpmatkcQUlvd0ucDtwnQ7kb1ey3v6PFbIccOjupzLGknu2hBjGFAqw2IG5hdh
      YRHKVSusiUdhYKv1Hg6C3SqZ2wDzxr1xOi2yLv3FFrk07fP3Wh3l9AXk338Cr7wAq5yTWkVj
      LI1//OkP+PR0mvZd+/nLP/nKbWVQIUzKxSKK04tTMdFR0KolVN3E5nTjtkGpqhEI+JGvO5L1
      IIAQgnx6AZvNjtPtQZJlJMl6WNIK5ArTRC8UsU9Mw9hVy+v0dkJ/r/WwljlKrZQAQgjq1TIT
      504wcuJ9iulFmrq20Nq/k0sfvYNaq7L/tW+xZf9zKPcLtwwDDPNzgykULTLkixiVCkpNtbxr
      tQYS1rVIkmX8drtFjBuhmet6COK+/m+PC90wkVUVeTED8wuW0ddq1nc3J6xQsLXZMkaHY22N
      epeAaZoYhSL2T05ZpPvSs1bOtMIoYmUEEOL6MGgyMzVLrG0TbvvaY9D1IICuqfz2e/+Oxakx
      hACX148nEMLtC+D2B/GFo7h8AdxeP95QFLvThd3pwul0YzNMK1ZNZRCpNFxLIrlcsH2LZfz3
      ONN2KSz3IZumSXp2kquDJxk78wkSEr37DtP3zPMEY82oqoqMYOijdxg69g7eYIT9r36T1r6B
      Fd2v2/QxDIsg1drnr1oNShUr5KhWrZxE163wT9PAFAi7DTQdyeOCUBBamiAesbz8Cg69W9ct
      kZIEv//EypuePwTtLcv7vG5QSeWoFst4gn5cIR+Kw/5gAhhaifc+PMehLV5+8MsTtG3ezR+9
      emjD7AkuZNPotQr1SplSNkWtUqJSyF1/ZamVS1TzWfzYaQrGaQ4kaAkkcJqgl8vk1DKZehGp
      o5XogYOEO3tWnZcs9ZB1TSU5cZnLJz9kZuQ8gXgz/c98iY5tu/AGI/eUk1+c58y7v2Bq6DSd
      A/vZ/dLXCSWW98BXbHSm+bnxazrUVYxaDcntQg741xR3r/ueYE23igZjE/Dsftjcdc/PGJpO
      YWaB3JVZUiOTlObTmJqBbLfhCvnwxsMPJoBWn+enP/kMubbA4Te+xZl//Jiv/PEfrnlDzEPJ
      AYS4GQqITA4xv4BIpRHzi0iyhOxyI8UiEIuQquaZTc+SzS5QKuQopJOYhoGsKERaOoh39NDU
      tYVI6yYcThc2x9Ijwr0eshAmtXKJyaHTXPzod1SKOZq7+th2+Ms09/Qj3+Ok9DvlCNMkNXOV
      E7/5T6SvTTHw3GsMPP8qDveDZ5jXYnRCCLR6jVwmQ03VcbjcON0eZFm6mRMoEsiKgixLKLL8
      QMdxP12EEJimgTBMTEPHNA1M00RX6+hqnVqpSLWUR9dU6pUyhmEQaW4jGG/B6fJgG5/CNjiM
      NLAV9uxASBJ6tU5+Oknq4gSLFycwNB132E98Rw+RzR04In6MUpXCzCL5qbkHE0AIk8vnPiUn
      x9jX38zoZJptfV1rXg+0bgQolXCUrJiXhZRVYy+UrGTP57Pq9fEohAJWYnaPYV1swCcAACAA
      SURBVNuKxStUClky16ZYnJ4gNTNBfnEeQ9cIxluItm4i1t5FrL2bQKwJ5z2M79aHLIQgm5xl
      9LMPmTh3EiSJroH99B96kVCiZVXGYugaY6c/4fzvf40kSex+6ev07j2MfJ9QZDUEqFfKJK+O
      cmVkmPErOdyLdXLCyUnZTQlw2m04nXYcDgcOm4zD4cDpsOFy2LHbbTjtCi6HDZfDhtNhwyZL
      eFx27IqE1yEjaiXUSh6jnEOvFNAreUS9glDL1KsV9HoNTa1j6DqKomB3uXG43MiKDZvdgUBY
      pCjmUWx2fOEoCd3Obn8nte5eUlXjutFrhDpbiPZ3Eu5uxZsI38wLn5zu0IaBePcY0lzSStoS
      MYhej08DPnA6lqx0CCFQixVyM0ncAR+usB+724Vh6NTLRQrpJOlr08yNX2JhcgxdreP0+gkl
      Woi2dtLc3UdTdx92pwtN07ApCrOjQ4x8+nvmrgzj9gXY9eLX6Ni2G5fXv6zwainDrRRznH33
      l4yd+pjmnn72vfpHRFs7lxxJ7nXtAPVqmYWrY0wMnmT2yijDBQ+qaOJZBK2bEuiVGulMEWWg
      j/DOLdR0k7qqU9d06ppBXTOo1jXqqoGmqVRqKpWqiqrp1Go1ytU6Nc3EUJxomoGEQMZEwkQW
      JjICBR2b0PE4ZIIBH/FYBL/XRcDvJRjw4nO7CAU82BWQTAObqVFLzXHtxGkqMzn8ShCQ8TsV
      JmtXqdorBJubiLR0EIglCCVaCcSa8EfiaJoGhk4hnSQzN/0YEwDQMlnsHo9VwVgBhBCopSpz
      n11i6thZBIAp0GsqkiLhDgew+9y4Qn6cAS+eSBC7z42p6GTmp0jPT5GcGqNQLFBTNfyJdoIt
      XRQXr5G7NkFrTx97v/Qam7Zsva+Hvh+W67nzi/Oc+M1/ZvbyBTbvPcyeV17HF4ouKcc0dErZ
      NPMTI4yfPU7y6igaDqaMKONSFz1C4jm5RvezO+h65RkUm42ZjweZ/OAMrrCfbd98EX9rbEWV
      thu6qJpBpaZRqqmUqyr5cp2aqlMo1ynXNIqVz99LVZVKTUPVDXTdpFqp4dVUOs06HUIjIZvU
      JZlrpsIV7GhOB/9Ds8xsXePfLxhIwiKbDet0eZvQkRSFsM+JnJsmRJ6gTX+8CbCaYV6r1pk7
      dYnpj84j221sen4Pwe4WZGQqhRLlXJnUXJpMKk9qZpFasYJbmLgx8SKwuZzY3A4kh51Mqchc
      WSWPnYzkYEGyUZIhEAzhdTvwuux43Q4ifjcBr5Og10Uk4MLrchDwOnHaFUI+F27n54tLVnJN
      pqEzPXyes+/+kmqpwI6jr7D96CsoNvttcgxdI7cwx/yVYaYuniV9bQrFZife3c+MGeejKY1i
      TeIZrcheu8HmP3iWjsO7MEzjZsxfXsgw/s4J0iOTtB7YRs8rB7F7lpcNrjYfEUJQLdeYOjXM
      2PtncVSrBBJhov2bCPd1UnQ4qRgCUwg03SQkmXRdGuJ0pk66bwuGrFBTdQRQrWkYpiBTKDOX
      LjOzWLDs8GkggBCWd58/M8LUsXPU6hr+3f3UWpu5OJtlYi5Lta6TK1k1bnH9M0KAjCDgshP2
      Oon5XSScCu0+By1uBap1arki9UKZarZAqVAh5/bi6O3A0dFCUdUpVVQyxSqFcp1MsUqxYs1C
      SpL1RbIsYbPJ+NwOogEPUb+LrZ1xBnoSRPxuHPalRxC1VmXwg39g+Ph7BGJN7P/KNwk2t1PO
      LnJ18DOmh89RKeRw+wJ07thP+7Y9zJZt/JdjY8ykihzujtEzN4OnUmXnn71GuKcVSZbvmggz
      dYPU8FXG/uE4wjTZ/NqzxAd6lhzlVjxHYgpq+SKLQxPMfDKIVqnRtGcLrQe3442GkO22+4eT
      qQz87kMr/3vx8F3L5VVVhevEmE+XnnwCaJUa8+dGmfrwLKl0gQuSi6veIBnVJBb00B730x4P
      EA16bnpjv9uB3+vA7bDj9ziw25Y2wnq9TvHqPMlzoywOXcEVDtB2aAex/k7ckc831+uGSaWm
      kSvVKFZUyjWVYkWlVFVJFypcSxWYShZIF6p0JALs6Eqwt6+ZTYkgsZAH+QF5RCmb4szv3uLK
      uRPYHS4MXSUYb6G9fyftW3cRae1kZCbLW8eGuXh1ked2buJLHUGy753A5nIw8M+/gif2+Wk0
      92uNqFVqXP39aWZPDBHc1MSWrx3F1xS9U52bWImjKiczzBy/QPLcKI6Ah7ZnttO0uw+717X8
      1oiZHLz/iZUDvnQEAv776vLEEcA0BdlilctXF5Bm5hGXJ8gmswzLLvItzcTbYnQ1h9jZmyDs
      c+Nz29f1AGZhmlRSOct7fXoBUzdIDPTSvGcLoa7WZcmpaoLFbJlz4/MMXllg6OoibqeNnpYw
      2zrj7NncxOa2CIpy9/0zTZPkxGUyyVk6+gbwhiLIio3RmQw//eASZ0bn2d3bxL/48gCeVIrR
      Xx0juKmZ/n/2Ak7/7csUHtQbVJiCwuwCo7/+iMpijraD2+l6+QCK/e5Z66UIYJom2bFpZk9c
      JDM6gycepO3QAImBXmtxIKvoDVquwHsfW8tIXjxsFUju1EXTHm8CVGt1VEMwny5x5VqWi1cX
      GZtO483neEYv0+Sx0bynD623k5a2OGG/C1m+fXHXwzohRgiBoWosDk0wd2qY/PQ8/tY4nS/s
      JdTVct/4+c5yqhBQU3XOjs0zMpXizOg8mWIVmyIz0J1gz5ZmdnTFiQTcOG8xPlVVURQbE/M5
      fvrBJU4OX6OvPcq3X93JlpYwMx+dY+K9U3QcHqDn1WeR70Gm5TTHNQ2DudMjTLx7EpvTwZav
      HyXS235bknw/Auh1lez4LFff+4xSMkNkSwfthwYI97bdFVatqjmupsGxk3BtHl46Ci0J63wA
      ux1yeTh28vElgG6YfO/Xp/n04iyFSp3msJdwrUp3Lk23W6Z1Xz8dR3fjiT74SM8v4ogkYZrk
      JueZPTFEZnQam9NO64HttOzfijPgXbYcsK47mSlx4eoig+NJxmezLObL9LSE2dweYX9/K13N
      IWq1Oj/5cIRPL87S1RLi9SN97OtrAU3j8i+Pkb48xeavHqFlX/994+mVdIeuF8qM/vojUsNX
      iW/vpucrh26GfndeU71QJnl+jLlTl6gXykT6NtH+7E5Cnfc/AnbV3aF1Hc4OWUvaD+5F3dSK
      4+oMnLsI0SVmgh8W1oMAphAcvzCFYUKLbLD4ySC1mXkSOzez6bnd+JoiyyrVfZFnhAkhqOfL
      zJ4cYvbTIQDCPW10vrAHf2scSZZXlDAKISjXNOZSRc5fSXJuLMnIdBqXw4YQguaojz9+cTu7
      eptw2BTqhTLn/+Zt1FKVHf/8FcLdDw7JVtoe3TRM8pNzDP/8fYy6StfLz9C6fyu6aRmuWqoy
      c/wC104OIUxB++GdtOzbiivoXfJZrak9umlau/gGhzEDfms17a7tsHXz40sAIQTZyTlmjp0j
      dekq4c3t9H7lEIH2xIrlPIpjUk3DJHVpgpnjF8hPJ/HEQnQc2Umwtw1vaPUd6ap1jXPjSWwy
      7NnSik2RrXt1ZZZLP3kPdzjA9j/5Mq6gb0lZqz0fwNB0po6dY/rYWdyRIK2HB8heniZ1acIq
      Dhy0Rj+bcwX3a63nAwBMzmBOziBv3WxNnPIYJ8GmrnPub97G1HS6XjpAuKftnnHsUnjU5wQL
      ISjNp5n5eJCFC+MoLge+pgi+lhiB9gTeRBhPNLiiiadb9TENk7lTw4z99hPi27rp+8Zzyza8
      tR6QUV7MMv4Px1m8NEGws5nOF/ZZ+Y975att14UAPEFVICEE9UoVh9OJvIwy5YPkbISDsoUp
      0Ko1khfGKc4sUJpLU83kQYCkyPhvEKIpSqizGZvbYS3nvc89VFUVRZKZePcksyeG6HrpAB2H
      d67oXq3HCTGmYVIrlXF5PWt6Tg0C3AMb4oywddTlTjl6TaWazlNezJKfSlKaT1HLWhNvdq8L
      f1sCbyyEtymCryWK0+/F4fcgSRLlbIGxXx6jMJ2k7/Xnadq5ecW6PFFHJN1Hl6eGAELXMSsV
      jFQKPZVGT6Uwi0X0xUVwOvHs2YP7wP6Hth9gPeTcGCXUYoVyMkN+at4ix+Q8pm5g97hwhXz4
      W+Nkr86BEGz/r14m0NG0qutqEOAhYd0IUKthEyDqNYSqYpbK6IuLGNkseiqFkc9jZLLoCwuY
      uRxIEpLTiWS3IXt9yH4fSjyOWa1Rv3ABWzSK59BBPM8/hy0WQ/qCdz2tVM6NRydMQT1fIj85
      T3E+RTmZwRHw0vuVQzj9q+9M1yDAQ8K65AC6TuZv/hb10jBGoYBZLlsyfV7kYBDF70cJhVAi
      EZRYDFs0iuz1Igf8yF4vit+aHhdCoGsaLC5SPXOW0rvvYhaKOLdtw3P0CO5dO63N5UtgI53u
      uF5yGgR4SFgXApgmpZOfQS6HLZFAiceQPV4kuw3J4UCy2ZblwW/NAYQQiGoVdXKS4q9/Q+3i
      JRS/H/fBg3ifO4K9o+OBSedGMdz1ktMgwEPC45IEG/k85Y8+ovLRJ2izszi3bsVz+Fnc+/eh
      +G6vo28kw10vOQ0CPCQ8LgS4AbNeR5uapvTee1RPnED2+3Ht2oXvyy9bo4IkbSjDXS85DQI8
      JDxuBLj5t6aJqFYpf3Kc0u9+h76Ywt7WhvfoEez79+GMLG/5xYOwUQggDANdVVEcjhXvaltv
      XeDhEEAI0SDAaucBhGmiTlyl9O671M6dx9R1nL092CJRbK0t2FtbUAIB5FAIJRhcdkXpYRNA
      CIGo1xHVKkaphKirmMUCRrGIkc1h5vMY2SxmuYxRqeDY1In3uaM4N/cirVKvjUgAo1Si/MGH
      DQKsdSJMCIFZKFC5NIw+Ooo2O4u+sICRSgMgedwoPh9KOIwSj+Po6sQWjaHEY9jb22/rbHa/
      UGo5j0hUq5j1OqJSQdRV6pkMcrWKkc1i5PPWnEc2i5nLY9ZrCFWziKDrSGCVhENhq4IW8KOE
      w+Byoo6OUTt7DufmXnyvvop7714kt2vJeQUhrK2KZ+dmmSvk6YpE2RpvQnlQr9EHYD0IIIRA
      LZfRTn5G8Tdvo6dSDQI8tP0AhoGRyaAvLKLNzmKkUmjz8+jX5jCrFcxKFVGroYTD2JqbsLe0
      YGtqglAQRVYwKxWEWscsVzAr1kvU64hKFfOW36Oq1rssIykypqxQEyamLOPyeHEHAjfLwnI4
      hC0cRg4EUAIBlHAI2e9HDgTuaZS6riNLEvrMDOUPPqRy/FNEvY7v1a/gPXIEW0vzbSObEIKq
      rjGTzzE4P8eF5ByKLBNxecjVqtQMne2JJva2tNMWDOJbRr+lG1gtAYQQmKUyRmqR6vlBSu9/
      gCiX8T53lMA3vt4gwBe9FEIYhmXQ+Tx6Oo2RTqOn0qhXr2LmrVBEkmUklxPJbkdyuZBdLmS3
      B8npQPZ4kJzO6+/Wv+sOB8l6jfFCnvFigbJpoCkKvlCI9nicbfFmusMRfCts+XhnEmzkcpQ/
      PEbl5GdoV6/i2r0b/2uv4tjaz3SpwPm5OYYXk5RUlc3RGNsTTWyOxnDLCiqCwfk5Li0kmcim
      8Toc9MUSHGjroMUfwL5EiLgSAgjTRE8mqQ0NUR8eQR0bwygUsSUSOHftJPDlL2NrslYNNwiw
      QdYCCdNE6DpatYrd7gDlerc1RbG8+3UPLYTAEIJivcZ4OsVoOsV4JoVhmoTcbvqiCbbGEzhl
      mYl8jpHFBabzWWRJIuT2MNDUwpZojITXh/0eneluxf2qQEJVqVy8xNyvf4U0No4SCPJpbyep
      bf1s79nM7pZWQi73zc/d1qHCNCnUawwl5xlMzpEsFQk4XexINLO3tY2Ix4Mi3d1p7kEEuJHX
      6Mkk1VOnKR/7CLNYBFnGtWO79dq5EzkYRJekRhXoVmwUAjxIjhCCsqoyW8gznkkxkUkzWygQ
      crvpDkfoDIXpjcaIerz3lKMaBhOZNGPpRcbSKVKVMm67nc2RGL3RGJ2hCGG3G+WO53EnAYQQ
      FOo1JrIZPp2eZCafo1PAV2eSSEMXMdJpvEeP4Hvly9g7O+/bje1WpMolLi0kGUzOMVcsEPf6
      2NHUzPZEMwmv76ZOdxLArNcx0mnUsXFqFy5QH7mMkclg7+7GvW8vroEd2NvbkV23bz1tlEHv
      wEYlgGGa5GpVRlILXF5cZK5YoKjW6QiG2BpP0BWKkPD58d7nO++7D9c0SJXLzBbyDCXnmcim
      EUDM42VzNMa2eBPtwRDKLW1RNNNkPJPi3Nw1rmTSGKbJ9qZmBpqa6QxFcNvtmJUK1VOnKb79
      NtrcHI7ubnyvvILnwH40WPLeGKbJfLHAheQ8Z+dmKdZrNPkD7GttY6CpBb/DiV4qYVyZoDY0
      RG1wEH0xhWS34+zbgnv3bhybe7E1NyM/INRrEOAOrAcBhBDU1DqyYm1KN6/f0hvvQojPew1h
      bXQXCAzTRDdNAOq6DkC+WmGykGdkcYFivYbf6aI9GGRHooWeSBSXzXaXp74XlrtFUzdNrhXy
      XFxIMpJaoFCvYZgmvZEYW6IxZvI5RtKLCAGdoTD72zrojURx2u7dm0foOvr8PPmfv0X94kWE
      buA6fBh7MIBQVYRhIDTN2qsLmNXqzc+hWU2stEqZhUIeo1ZHksAjIGB3oJdL1HUDT+cm/Lt3
      49yxHWdPDyjKsudfGgS4A8uaCRaCuq5R0TSqmkahXqOiqhTqdQr1GrlqlaqmUjesNnyaYWBe
      N3AA3TRvGpsQYAgTUwhkSbrZ58cuW/G4Q5Fp9gfoCkfoicRoXUaCeC+s5t4IIcjWqoynrTBr
      Jp/D63Sys6mF/niCiNuzohKmUShQPnaMyukzSIYBig1Jka11WjbrfkvX265LNhvS9WcguVxI
      ioJ03ZNLDgfTpQKDao0xhx1/Swut/gD98QQt/gBRj3fZej0xBNBNk19dPMVCpYbb7kKRZZyK
      DZfNjkNRcNltyJJs/Wyz4VBsOGwKDkXBLttu/o1NktF0nYqhU1ZVCrUamWqFklqnUK9TvG7g
      mmGgX/fYAoHH7iDgdOJ3uQi7PLgUBb/LOrbHaVNufjeAXVGQJQm7LFud4GTleqLHTQLIkoSE
      hGnoBDzeBzbAWg7WnJQLQaVex26z4VjpgYB36lKrWQ5GklY9U26aJuV6jZKuX0/+F7mSSWOT
      ZRI+P12hCP3xBJuuh2/3I8S6E0CvFTlz+izOWBc7+zqQhCA5dZnhqyl2HTxIcXKQsbkCXf27
      6WkNA+tDAM3Q+N//6d8yNHceh70Zpz1BzN9DyB3D4whQN3RM0wo5dFNgChPDtDyvIQSmKe7y
      xM7rJPHYHZaBu5wEnC5CLjceh4OQy03A6SLgct1loBtlCcN6ytnoa4E0w2A6n2UsbSX4mUoF
      JOiPJeiOROkKRwg5XdhuGUHXnQCzVy4gAt2UJodo3X0Qv6Ry5twQO7Z2MDSWwy2q9OzaifMW
      e1mvEChVWORKdozx1CiXF4eZyk7gtLloCbQy0LKbrshmemNbsCtOdFOgmwbGdcM3TBPt+k01
      TROXw4HHbsdlt+O22Vc8W7mRDHe95Gx0AtwKIQT5Wo2JbJrz89eYyedRDZ2410dHMERfLMGm
      UBg7rDMBxi/gatmOOnMOuX0vcbvKxbErDGzt49y5s7iExmy2SLxzgB3diXU/JlW5zm7d1CnV
      S8wWpriYvMDIwkXmCteQJZnWQBt9sW0MtOymPbQJp82JTbbdU85SsJJYgSmM6yOKgSlMNF3H
      pigosoJNtqHIVgi2lmtaDQTWuW66oeOwO5DWcJzJksekLhNrvSbgps0sh4ymEKiGwWKlzNVc
      livZNLOFPBLgczjx2OzYFdkKQ9dKgPTsGOPzZdRqjX37d2BiY3TwFDanDTyb8JBH1zVKhof9
      A73AF5MECyHIVbOMp0YZXRxheOEiyeIcuqGxKdzF1qYd9Ce20Rpox+8IYEomqlGnptVuvle1
      Cvlanrpeo1ArUK4XyVWz1PQaZbVMWS1RVSuU1TKaoaLICl6Hj7AnQtgdIegOEXZHCHnCxLwJ
      Ai4/Xocfp81JwGUteVjJNemGTlWvUtdr1LUaJbVIsVakUM+Tr+Yp1vOkyylLH10j4o3id/qJ
      eGP4nX7i3gQ+px+3w4PH7sHr9N3mCO76vsdoBHgQhBDM5Of42eA/cmH+Mh5HkLZQNyF3dO0E
      EMIgs7CAzRfBZzdRcaAYVVL5Kk2JGPVSjmypTrypCYdieZJHUQXSDI18LUeyMMfg3DkuLwwz
      nr6M2+7B5/BjCB3N0FB1Fc3UUPU6dsWOx+HD4/AQcAbwOHyE3WFcdjcBV4CAK4jX4cPj8OKU
      XQjJJFvNkCmnWCwvkqtmyVWzpMspctUsuqnhtnmw2xx4rxtgwt9MwBkk7ksQcAXx2f1oQiVd
      TlGsFyjU8hRqebLVLMVaHlVXUQ3rVdfruOwuAk5LF58zQMwbw+8KIAmZbC1NsVYkW02Tq+ZI
      lxeRJRmnzYXT5sRt9+BxeIh544TcEcKeCCF3mOh1wgSdYbxO72NLACEE1wqzHL96jH8a/UdM
      02RzrJ+F0hxzhWt4HN7HtwoEa2tGJRBohsZwcoj5whxuh4egK3jdqL0E3SEU2XYzhJCuV2lu
      /LwcXT6v+1tJeEUtk6mkyVWzLJYWyFYzlqHX8iyWF6nrNXRDR5ZkXHY3XocXn9N/0zAjnigB
      VxC/M4DfFSDqiWFTLB3v1E9V1ZvGckMHIQQVrcxiaYFcNUu2kiFbzZAqLVKsF0iVF6lqFXRD
      Rzd1DFOnLdTBV/q/ys6WPYTc4VWFQ18kAYQQ1PQa09lJfnHhp1xKDtISaOeF3pd4rudFFBRs
      NhuaoTGWuvx0EuBWbJSZYCGEFWpVCridbrxO36pyiLXoY+lQt0I7rUqmnOLMzGecmjlBTa9x
      uOs5ntn0LP2J7diV5d+vL4oApmlyZvYzfnr+P7FQTNKf2MZX+r/K1qYdOG3Oe+rSIMAGIcBG
      lKPrOpIsUVZLnJ09zSdXP+TS/BCbwp0c7X6BZ7ueI+AKIC1B1IdJgBuk/XTyI34/9i7zhWs8
      3/siz/e+TGugFeWOHKdBgDvQIMD9ca/FcNO5SU5Nn+CfRt+hplXY03aAF3pfpifai9d574a7
      D4MApjCZK8zy6dWPOXbl91S1Kgc7j/AHW79GS7DtvnIaBLgDDQLcHw+qAuWrOcZSl/ndyD9w
      KXmBhL+Jo91fYn/HQdpDm9Zdl/+/vTtraiM7wzj+727tAi1oQyDA2MLjZeyMJ+PxkppUzVSq
      cpHKd/LHyV1SlVxMjTOZDDarxY7AQggQq0AGtLX27s4FtpMasD0Z5NhE53dFcfHq7T56ug99
      mu5XAZAUidSLJD8kHzOzHcNt9/DbK1/z5cBDgh2hd9YRAfgJEYA3+zmXQTVd47D8gomNEYZT
      /yBXyXGz+xYPBr/ids8dbKaTdyj/rH8Wenmx4GRt5eQt8pqhYxg6Da1BfG+B75PfspPf5rIv
      ytdDv+PzyF3MiqX97gUCEYD3Xee/XQeoNWskDpYYWR9manMSt93D3f57fBb+ApvFRqVZodKo
      UG/WKNdValqNYjVPrVmnXC+9Xk8p18vU9TrVRpVas0pDq6PWVTx2L7d77vD7a39gwDv4i74/
      IgA/IQLwZr90IUzXdbLqAfO7M3y7/DeypX1kSaGh1TErZiwmKw6z8+WCoAuLYsVhceK0drxe
      n3BanDgsThxmB1aTlU6rC5tix9fpb+nVMREAEYA3asn7AQydg/w+ZrMZl8391pXnt01j3teD
      sc53n6sgvIMsyXQ5fC0J9ftwvkOwIFxwIgBCWxMBENqaCIDQ1kQAhLYmAiC0NREAoa2JAAht
      TQRAaGsiAEJbEwEQ2poIgNDWRACEtiYCILQ1EQChrYkACG1NBEBoayIAQlsTARDamgiA0NbO
      HQBDb7C+sszeYen178r5LPGlVRq68fLnJHX9vJ8kCK137gBkt1OUJQdbzxeo6GDoTZYTKTzO
      GgvLmywnNnA7deKJrVb0Kwgtde4ANBpNunv76Q/ayVfB0HRsLg+9AzdQ1C0sHj+9kSsoWq4V
      /QpCS507AJIkUSwWODiq0GEFSZaolEqUC7s0LAFqhTzl0gsahqMV/QpCS507AN39V8hvxrFH
      rmIuZzksa0T7AkzHM9y8GSXa52VmaZsb1wdb0a8gtJR4NKJ4NOIb/b+8JO9tvfxPA/BqI159
      5Hlfv6nr+rkHp1V1PqZeWlWnHcbpQp8BGo3GuY8IhmGgaRom0/kek9qKXj62Ou0wTh9kIey8
      R5RXWnFUgdb006pePqY6rXhJdqt6gfczTh/kDCAIHwtxK4TQ1pRHjx49+tBNvEutsM/IWIzk
      2h6hUAeTT0dY2y/S47UwOjpKOlOkN9TB+MgI29kSoe4Qyhlny3Rihpn5JXJ1C+TTjMfm0Oxd
      1A9WmZiapWnxsJ9aYHE5wepujiv94dNF6kXGxidIJNO4gn7iY8MspfcJdweYG/+RxdUM3d0e
      ZsZGWFndwB0ewG4+3cyLnSSTU/PsHlZwmVSejMbI1xU6jRw/jk6Sr5uRSjtMzsUp1hVCPveZ
      ++Zwd5XJ2Bw7L8q4zWWejsU4rsp0UGR6dh5nYAA9n2Z4ZJKjmomegOd0Ea3O4uwz4ksJdLuX
      g+Qss/EkTn+ITCrO6m6O3m4/qXiMZEYlEvKd2Us1n2FkPMbqeoZg0MHEyAgbByVCbhOLk0+o
      uqNYq/tMTDwjtX1AKNyD+YyB2ng+zcz8EoWGFf1og/GpOQyHj+phmunnmwz0hlhfmmFmcZmS
      ZiHU5TpVI7uV4Nn0PJnjGh1SnuGxaYqaGWszx/RcHHewH5vJuBgBUMx2IpEIWjFPw1Dx9N0h
      0NhnXa0zMHiLLrKs7RZxBnq53NeD3WrhrOlipzdIT8hLLq9SKFd48OA+W6vPKTdM3Ht4n621
      FW5//gWBDgOlow+fy3q6iGwm3BvBZtShuo/quc2n3iY7pSMUR5RfheokF+2kBAAABG5JREFU
      CwoKChGvQt0WxG1XTpWxOT1EekOouTzZksq9e/co7qXZzVW5//ABx3vrFIsVBoY+YXd7k4G+
      yJn7xuZwE+ntRs3leVFSuXv3HmomjacvSqdURrMHyKxvcPvBQw531gmHzwi1JOML9eB32yge
      ZVEtfu7eGGBr75ChaJRi4ZiA34/b66VYLBHwd509TpaTcWoWctT0Mr5Ln+OrZWj4BxnsrLNv
      BOn22In0RdArBezuIFbT6YHq9AZOxilXolCp8+DBl2ymUkSvXqOi5gn4A7jcXhxWhUJVIxzw
      nt4vHV76ekIUc3kOiiq/eXifo50NggND2A0VuSOAXD28GFMgQ2+ykVyhazCKAwNZUTCZJJoa
      KLKMosjUmhrq0QFLCzNk89Uz61TyWdZ3jrk6dAlJkpFkGQkdZBlZkl6GRmNtq8TlyOmjCgAS
      7KRWMDoDBDttKCYTJkVC03RkxYTJpKBpYDQqHJZqoJ99F2CzWmQ1laZv6CpmSUKWJGTZQJck
      FPmkl6FrVzk+2KdYrrxx3zRrJVZTGyd1ZOnlVRtAUl4fBAxJwvR6+87epsPdNJkSRAeCyIqC
      JMtg6CjKv8OrvOOPWV1vsJ5cwXd56GScZBlFkdCNk/0LIOl1kskU7vBlXLaz65VzWdZ3cwxF
      B07GSFaQ0E/6kk4a1hoVDnMqFtPpgwtAs1IgubbFwNAQJkk+GW/JQPqP/bI4/exinAFym4uM
      Lu1Rzh0R6IuwFBtnr2LmTrSb6dgkB6qJX9/sZzO9RU2T6Ovvx245vWMmhh+TK9co1CQ8UoHY
      bJzO8FU6tSxTs3E6Q1Fceg7V6ifoOvvWjWYuzd8nEtRKeRzdg+zMPiV1WOPGtWtsLIyS2K1x
      YyjEZipNuValK3wJj+P0pbvnMyOkX5QoFiuEPWbGp+bQbH6GfDJPJmfAHsRrrpFa38IbvkJv
      8IypC5CYHSV9UKRYLNPjtTI+NYtm9eHSjpicmmX7uMEnYSsjEzNIDj/9Yf+pGnqtxPDTMcrl
      Mpqti3pmhXhqi97By6QXpllMJJGcHjIr8yyurCHZuwh4O/hpno7T84w/z6DmjglGeojHJtiv
      WrjUJTE5PslqpoilnCWxtU++UCQQDGExnQ7BxPBj8uU6pbqCS88Rm1vC1RNF3VlhZmEJVVMo
      vdgle5yjqTjp6z49JYvHnrJ7pFIoVelxSYzF5pGcIWy1fSan59nJa3x265q4CiS0twsxBRKE
      90UEQGhrIgBCWxMBENqaCIDQ1kQAhAvIYOHpY1YPSjyPPWE9q/7iSue7t1QQPgiJoeuX+NN3
      3+OQdf54S+fxX/+M+/IdvGaV5bUs33x1m8RSGt3q5O7tq2+sJM4AwoVk8w0RbiYI3/mG5Pd/
      YSFTYOLJPzlWVdZmR5lPJvnuhzmuX4++tY4IgHBhhfw+XG43vt4ebGYbN299CvVj/D4vBgbh
      /igd5rd/xcVKsHBhaY06KBZkSadSLoNixiSDphmYLSZ0DSyWt8/yRQCEtiamQEJb+xesPU2X
      lcQOygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      l3IIJClq/j/VutQwMKS7jwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      xuQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Valance over time' width='192'>
      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
      mv8PB3l07KrFtYMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
